# Executive Cloud FinOps Dashboard - Implementation Guide

## ðŸ“‹ **Workbook Structure Overview**

### **Sheet Architecture:**
1. **Dashboard** - Executive summary with charts and KPIs
2. **Data Entry** - Monthly input form for manual data entry
3. **Calculations** - Automated formulas and data processing
4. **Historical Data** - Time-series data storage
5. **Lookup Tables** - Reference data and configurations

---

## ðŸŽ¯ **Phase 1: Initial Setup (30 minutes)**

### **Step 1: Create the Workbook Structure**

1. **Create a new Excel workbook** and save as "Cloud_FinOps_Executive_Dashboard.xlsx"

2. **Rename sheets:**
   - Sheet1 â†’ "Dashboard"
   - Sheet2 â†’ "Data_Entry"
   - Sheet3 â†’ "Calculations"
   - Add Sheet4 â†’ "Historical_Data"
   - Add Sheet5 â†’ "Lookup_Tables"

### **Step 2: Set up Lookup Tables Sheet**

```excel
// In Lookup_Tables sheet, create these tables:

A1:B6 - Environment Mapping
Environment_ID | Environment_Name
AWS_LZ        | AWS Landing Zone
AWS_ASEA      | AWS ASEA
AWS_LZA       | AWS LZA (New)
AZURE_CORP    | Azure Corporate
AZURE_DPM     | Azure DPM

D1:E6 - Account Counts
Environment_ID | Account_Count
AWS_LZ        | 45
AWS_ASEA      | 78
AWS_LZA       | 32
AZURE_CORP    | 25
AZURE_DPM     | 10
```

---

## ðŸŽ¯ **Phase 2: Data Entry Sheet Setup (20 minutes)**

### **Step 3: Create Monthly Input Form**

```excel
// Data_Entry Sheet Layout:

A1: "MONTHLY CLOUD COST DATA ENTRY"
A2: "Reporting Month:"
B2: [Data Validation Dropdown with months]

A4:G4 Headers:
Environment | Gross_Cost | Enterprise_Discount | Savings_Plans | Bundle_Discount | Prepaid_Commitment | Notes

A5:A9 Environment List:
AWS Landing Zone
AWS ASEA
AWS LZA (New)
Azure Corporate
Azure DPM

// Format as Table (Ctrl+T) and name it "MonthlyData"
```

### **Step 4: Add Data Validation**

1. **Select B2** â†’ Data â†’ Data Validation â†’ List
   - Source: `Jan-2025,Feb-2025,Mar-2025,...,Dec-2025`

2. **Select columns B:F** â†’ Data Validation â†’ Custom
   - Formula: `=AND(VALUE(B5)>=0,ISNUMBER(VALUE(B5)))`
   - Error message: "Please enter positive numbers only"

---

## ðŸŽ¯ **Phase 3: Calculations Sheet (45 minutes)**

### **Step 5: Core Calculations Setup**

```excel
// Calculations Sheet Structure:

A1: "AUTOMATED CALCULATIONS"

// Current Month Summary (A3:H15)
A3: "Current Month:"
B3: =Data_Entry!$B$2

A5: "Environment Totals:"
A6:H10:
Environment | Gross | Net_Before_SSC | SSC_Fee | Total_Final | Savings_Total | Savings_Rate | Account_Count

// Formulas for row 6 (AWS Landing Zone):
A6: =Lookup_Tables!$B$2
B6: =INDEX(Data_Entry!$B:$B,MATCH(A6,Data_Entry!$A:$A,0))
C6: =B6-SUMPRODUCT(INDEX(Data_Entry!$C:$F,MATCH(A6,Data_Entry!$A:$A,0),{1;2;3;4}))
D6: =B6*0.1
E6: =C6+D6
F6: =SUMPRODUCT(INDEX(Data_Entry!$C:$F,MATCH(A6,Data_Entry!$A:$A,0),{1;2;3;4}))
G6: =IF(B6>0,F6/B6,0)
H6: =INDEX(Lookup_Tables!$E:$E,MATCH(LEFT(A6,FIND(" ",A6)-1),Lookup_Tables!$D:$D,0))
```

### **Step 6: Summary Calculations**

```excel
// Total Summary (A12:B20)
A12: "EXECUTIVE SUMMARY"
A13: "Total Gross Cost:"        B13: =SUM(B6:B10)
A14: "Total Enterprise Disc:"   B14: =SUMPRODUCT(Data_Entry!$C$6:$C$10)
A15: "Total Savings Plans:"     B15: =SUMPRODUCT(Data_Entry!$D$6:$D$10)
A16: "Total Bundle Disc:"       B16: =SUMPRODUCT(Data_Entry!$E$6:$E$10)
A17: "Total Prepaid Commit:"    B17: =SUMPRODUCT(Data_Entry!$F$6:$F$10)
A18: "Net Before SSC:"          B18: =B13-B14-B15-B16-B17
A19: "SSC Fee (10% of Gross):"  B19: =B13*0.1
A20: "Total Final Cost:"        B20: =B18+B19
A21: "Total Savings:"           B21: =B14+B15+B16+B17
A22: "Savings Rate:"            B22: =IF(B13>0,B21/B13,0)
A23: "Total Accounts:"          B23: =SUM(H6:H10)
```

---

## ðŸŽ¯ **Phase 4: Historical Data Management (25 minutes)**

### **Step 7: Historical Data Structure**

```excel
// Historical_Data Sheet:
A1:N1 Headers:
Month | AWS_LZ_Gross | AWS_LZ_Net | AWS_ASEA_Gross | AWS_ASEA_Net | AWS_LZA_Gross | AWS_LZA_Net | AZURE_CORP_Gross | AZURE_CORP_Net | AZURE_DPM_Gross | AZURE_DPM_Net | Total_Gross | Total_Net | Total_Savings

// VBA Macro for automatic data append (optional):
Sub UpdateHistoricalData()
    Dim lastRow As Long
    lastRow = Historical_Data.Cells(Rows.Count, 1).End(xlUp).Row + 1
    
    Historical_Data.Cells(lastRow, 1) = Data_Entry.Range("B2").Value
    Historical_Data.Cells(lastRow, 12) = Calculations.Range("B13").Value
    Historical_Data.Cells(lastRow, 13) = Calculations.Range("B20").Value
    Historical_Data.Cells(lastRow, 14) = Calculations.Range("B21").Value
End Sub
```

---

## ðŸŽ¯ **Phase 5: Executive Dashboard Creation (60 minutes)**

### **Step 8: Dashboard Layout**

```excel
// Dashboard Sheet Structure:

A1:H1 - Merged header: "EXECUTIVE CLOUD FINANCIAL DASHBOARD"
A2:H2 - Merged subtitle with current month

// KPI Cards (A4:H8)
A4: "Total Monthly Cost"    C4: =Calculations!$B$20    E4: "YoY Change"
A5: "Total Savings"         C5: =Calculations!$B$21    E5: =calculated_change
A6: "Savings Rate"          C6: =Calculations!$B$22    E6: "Target: 15%"
A7: "Cost Efficiency"       C7: =custom_formula       E7: "vs Last Month"
```

### **Step 9: Create Dynamic Charts**

1. **Monthly Trend Chart:**
   ```excel
   // Chart Data Source: Historical_Data!A:N
   // Chart Type: Line Chart with markers
   // Series 1: Total_Gross (Column L)
   // Series 2: Total_Net (Column M)
   // X-axis: Month (Column A)
   ```

2. **Environment Breakdown Chart:**
   ```excel
   // Data Source: Calculations!A6:B10
   // Chart Type: Horizontal Bar Chart
   // Dynamic range using OFFSET formula
   ```

3. **Savings Composition Chart:**
   ```excel
   // Data Source: 
   // Labels: Enterprise Disc, Savings Plans, Bundle Disc, Prepaid
   // Values: Calculations!B14:B17
   // Chart Type: Doughnut Chart
   ```

### **Step 10: Advanced Formatting**

```excel
// Conditional Formatting Rules:

1. KPI Values (C4:C8):
   - Green if trending up
   - Red if exceeding budget thresholds

2. Environment Costs:
   - Color scale from green (low) to red (high)
   - Icon sets for performance indicators

3. Data Entry validation:
   - Red highlighting for missing values
   - Green highlighting for completed entries
```

---

## ðŸŽ¯ **Phase 6: Automation & User Experience (30 minutes)**

### **Step 11: Create Update Macro**

```vba
Sub MonthlyDashboardUpdate()
    Application.ScreenUpdating = False
    
    ' Refresh all calculations
    Application.Calculate
    
    ' Update historical data
    Call UpdateHistoricalData
    
    ' Refresh all charts
    Dim cht As ChartObject
    For Each cht In Dashboard.ChartObjects
        cht.Chart.Refresh
    Next cht
    
    ' Format currency and percentages
    Range("Calculations!B13:B23").NumberFormat = "$#,##0"
    Range("Calculations!B22").NumberFormat = "0.0%"
    
    Application.ScreenUpdating = True
    
    MsgBox "Dashboard updated successfully for " & Data_Entry.Range("B2").Value
End Sub
```

### **Step 12: Create Navigation & Controls**

```excel
// Add Form Controls:
1. Month Selection Dropdown (linked to Data_Entry!B2)
2. "Update Dashboard" Button (linked to MonthlyDashboardUpdate macro)
3. "Export Report" Button for PDF generation
4. "Data Validation" Button to check completeness

// Protection Settings:
- Protect all sheets except Data_Entry
- Allow users to edit only input cells
- Password protect formulas and structure
```

---

## ðŸŽ¯ **Phase 7: Testing & Validation (20 minutes)**

### **Step 13: Comprehensive Testing**

1. **Data Integrity Tests:**
   ```excel
   // Create validation formulas:
   =IF(SUM(Data_Entry!B6:B10)<>Calculations!B13,"ERROR: Gross totals don't match","OK")
   =IF(Calculations!B19<>Calculations!B13*0.1,"ERROR: SSC calculation wrong","OK")
   ```

2. **Formula Validation:**
   - Test with sample data for all 5 environments
   - Verify percentage calculations
   - Check chart data ranges

3. **User Acceptance Testing:**
   - Test monthly data entry workflow
   - Verify executive dashboard readability
   - Check responsiveness of charts

---

## ðŸ“‹ **Monthly Update Workflow**

### **Simple 3-Step Monthly Process:**

1. **Open Dashboard** â†’ Navigate to Data_Entry sheet
2. **Select Month** â†’ Enter costs and discounts for each environment
3. **Click Update** â†’ Run MonthlyDashboardUpdate macro

**Time Required:** 10-15 minutes per month

---

## ðŸŽ¯ **Key Features Implemented:**

âœ… **Executive-Level Visualization** - Clean, professional dashboard  
âœ… **Multi-Cloud Tracking** - All 5 environments consolidated  
âœ… **Financial Accuracy** - Gross/Net calculations with SSC fees  
âœ… **Savings Tracking** - All discount types monitored  
âœ… **Historical Trends** - 12-month rolling analysis  
âœ… **One-Time Setup** - Monthly updates via simple data entry  
âœ… **Automated Calculations** - No manual formula updates needed  
âœ… **Data Validation** - Error checking and input validation  

---

## ðŸ“ˆ **Advanced Enhancements (Optional):**

- **Power Query** integration for semi-automated invoice parsing
- **Power Pivot** for advanced analytics and drill-down capabilities
- **Conditional formatting** for budget variance alerts
- **Mobile-friendly** dashboard version using Excel Online
- **API integration** for real-time cost monitoring (future enhancement)

---

**Total Implementation Time: ~4 hours**  
**Monthly Maintenance Time: ~15 minutes**